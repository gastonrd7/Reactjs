<<<<<<< HEAD
import React, { PropTypes } from 'react'
import Product from './product'
=======
//componenete funcional, no extiende de componenet, se genera como una funcion, lenetran los valores por parametro
import React, { PropTypes } from 'react'
import uuid from 'uuid'
>>>>>>> a0b14de8bf6dd6c0cd66f42e220385358d482332

const ProductList = ({
    loading,
    products
<<<<<<< HEAD
}) => {
    <section className="container">
        { loading && <span>Cargando datos...</span> }
        <div className="row">
        {
            products.map(product => (
            <Product
                key={uuid.v4()}
                {...product}
            />
            ))
        }
        </div>
    </section>
}

ProductList.PropTypes = {
    loading: PropTypes.bool.isRequired,
    products: PropTypes.arrayOf(PropTypes.object).isRequired
}

//{ loading && <span>Cargando datos...</span> }
// En vez de poner un if, preguntamos por la propiedad loading que es bool
//En caso de ser true el && hace de then y dibuja el span

//luego recooro productos, que me entra por parametro y dibujo Product
//a cada item le asigno un id autogenerado
//y luego le paso todas las propiedades de product con ...product

export default ProductList
=======
}) => (
    <section className="container">
    { loading && <span>Cargando datos...</span> }
    <div className="row">
      {
        products.map(product => (
          <Product
            key={uuid.v4()}
            {...product}
          />
        ))
      }
    </div>
  </section>
)

// { loading && <span>Cargando datos...</span> }
// significa que si loading que es te tipo bool esta en true se dibuja el span
// {...product} : le paso por parametro todas las propiedades de product con el ...
// key={uuid.v4()} genero un Id autogenerado

ProductList.propTypes = {
    products: PropTypes.arrayOf(PropTypes.object).isRequired,
    loading: PropTypes.bool.isRequired
  };
  
  export default ProductList;
>>>>>>> a0b14de8bf6dd6c0cd66f42e220385358d482332
